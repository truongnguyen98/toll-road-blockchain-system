{
  "contractName": "OwnedI",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "LogOwnerSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\ncontract OwnedI {\n    /**\n     * Event emitted when a new owner has been set.\n     * @param previousOwner The previous owner, who happened to effect the change.\n     * @param newOwner The new, and current, owner the contract.\n     */\n    event LogOwnerSet(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * Sets the new owner for this contract.\n     *     It should roll back if the caller is not the current owner.\n     *     It should roll back if the argument is the current owner.\n     *     It should roll back if the argument is a 0 address.\n     * @param newOwner The new owner of the contract\n     * @return Whether the action was successful.\n     * Emits LogOwnerSet with:\n     *     The sender of the action.\n     *     The new owner.\n     */\n    function setOwner(address newOwner) public returns(bool success);\n\n    /**\n     * @return The owner of this contract.\n     */\n    function getOwner() view public returns(address owner);\n\n    /*\n     * You need to create:\n     *\n     * - a contract named `Owned` that:\n     *     - is a `OwnedI`.\n     *     - has a modifier named `fromOwner` that rolls back the transaction if the\n     * transaction sender is not the owner.\n     *     - has a constructor that takes no parameter.\n     */\n}",
  "sourcePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/OwnedI.sol",
  "ast": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/OwnedI.sol",
    "exportedSymbols": {
      "OwnedI": [
        1637
      ]
    },
    "id": 1638,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1618,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1637,
        "linearizedBaseContracts": [
          1637
        ],
        "name": "OwnedI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new owner has been set.\n@param previousOwner The previous owner, who happened to effect the change.\n@param newOwner The new, and current, owner the contract.",
            "id": 1624,
            "name": "LogOwnerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1620,
                  "indexed": true,
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "282:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1622,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "313:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "281:57:11"
            },
            "src": "264:75:11"
          },
          {
            "body": null,
            "documentation": "Sets the new owner for this contract.\n    It should roll back if the caller is not the current owner.\n    It should roll back if the argument is the current owner.\n    It should roll back if the argument is a 0 address.\n@param newOwner The new owner of the contract\n@return Whether the action was successful.\nEmits LogOwnerSet with:\n    The sender of the action.\n    The new owner.",
            "id": 1631,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1626,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "824:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "823:18:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1629,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "857:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "856:14:11"
            },
            "scope": 1637,
            "src": "806:65:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@return The owner of this contract.",
            "id": 1636,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "976:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "975:15:11"
            },
            "scope": 1637,
            "src": "936:55:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1638,
        "src": "26:1270:11"
      }
    ],
    "src": "0:1296:11"
  },
  "legacyAST": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/OwnedI.sol",
    "exportedSymbols": {
      "OwnedI": [
        1637
      ]
    },
    "id": 1638,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1618,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1637,
        "linearizedBaseContracts": [
          1637
        ],
        "name": "OwnedI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new owner has been set.\n@param previousOwner The previous owner, who happened to effect the change.\n@param newOwner The new, and current, owner the contract.",
            "id": 1624,
            "name": "LogOwnerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1620,
                  "indexed": true,
                  "name": "previousOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "282:29:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1622,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "313:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "281:57:11"
            },
            "src": "264:75:11"
          },
          {
            "body": null,
            "documentation": "Sets the new owner for this contract.\n    It should roll back if the caller is not the current owner.\n    It should roll back if the argument is the current owner.\n    It should roll back if the argument is a 0 address.\n@param newOwner The new owner of the contract\n@return Whether the action was successful.\nEmits LogOwnerSet with:\n    The sender of the action.\n    The new owner.",
            "id": 1631,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1626,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "824:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "823:18:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1629,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "857:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "856:14:11"
            },
            "scope": 1637,
            "src": "806:65:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@return The owner of this contract.",
            "id": 1636,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "976:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "975:15:11"
            },
            "scope": 1637,
            "src": "936:55:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1638,
        "src": "26:1270:11"
      }
    ],
    "src": "0:1296:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-18T13:04:59.507Z"
}