{
  "contractName": "PausableI",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newPausedState",
          "type": "bool"
        }
      ],
      "name": "LogPausedSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newState",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "name": "isIndeed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\ncontract PausableI {\n    /**\n     * Event emitted when a new paused state has been set.\n     * @param sender The account that ran the action.\n     * @param newPausedState The new, and current, paused state of the contract.\n     */\n    event LogPausedSet(address indexed sender, bool indexed newPausedState);\n\n    /**\n     * Sets the new paused state for this contract.\n     *     It should roll back if the caller is not the current owner of this contract.\n     *     It should roll back if the state passed is no different from the current.\n     * @param newState The new desired \"paused\" state of the contract.\n     * @return Whether the action was successful.\n     * Emits LogPausedSet with:\n     *     The sender of the action.\n     *     The new state.\n     */\n    function setPaused(bool newState) public returns(bool success);\n\n    /**\n     * @return Whether the contract is indeed paused.\n     */\n    function isPaused() view public returns(bool isIndeed);\n\n    /*\n     * You need to create:\n     *\n     * - a contract named `Pausable` that:\n     *     - is a `OwnedI` and a `PausableI`.\n     *     - has a modifier named `whenPaused` that rolls back the transaction if the\n     * contract is in the `false` paused state.\n     *     - has a modifier named `whenNotPaused` that rolls back the transaction if the\n     * contract is in the `true` paused state.\n     *     - has a constructor that takes one `bool` parameter, the initial paused state.\n     */\n}",
  "sourcePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/PausableI.sol",
  "ast": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/PausableI.sol",
    "exportedSymbols": {
      "PausableI": [
        1657
      ]
    },
    "id": 1658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1638,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1657,
        "linearizedBaseContracts": [
          1657
        ],
        "name": "PausableI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new paused state has been set.\n@param sender The account that ran the action.\n@param newPausedState The new, and current, paused state of the contract.",
            "id": 1644,
            "name": "LogPausedSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "280:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "indexed": true,
                  "name": "newPausedState",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "304:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "279:53:12"
            },
            "src": "261:72:12"
          },
          {
            "body": null,
            "documentation": "Sets the new paused state for this contract.\n    It should roll back if the caller is not the current owner of this contract.\n    It should roll back if the state passed is no different from the current.\n@param newState The new desired \"paused\" state of the contract.\n@return Whether the action was successful.\nEmits LogPausedSet with:\n    The sender of the action.\n    The new state.",
            "id": 1651,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1646,
                  "name": "newState",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "815:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:15:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "845:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "844:14:12"
            },
            "scope": 1657,
            "src": "796:63:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@return Whether the contract is indeed paused.",
            "id": 1656,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:2:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "name": "isIndeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "975:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "974:15:12"
            },
            "scope": 1657,
            "src": "935:55:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1658,
        "src": "26:1465:12"
      }
    ],
    "src": "0:1491:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/PausableI.sol",
    "exportedSymbols": {
      "PausableI": [
        1657
      ]
    },
    "id": 1658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1638,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1657,
        "linearizedBaseContracts": [
          1657
        ],
        "name": "PausableI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new paused state has been set.\n@param sender The account that ran the action.\n@param newPausedState The new, and current, paused state of the contract.",
            "id": 1644,
            "name": "LogPausedSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "280:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "280:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "indexed": true,
                  "name": "newPausedState",
                  "nodeType": "VariableDeclaration",
                  "scope": 1644,
                  "src": "304:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "279:53:12"
            },
            "src": "261:72:12"
          },
          {
            "body": null,
            "documentation": "Sets the new paused state for this contract.\n    It should roll back if the caller is not the current owner of this contract.\n    It should roll back if the state passed is no different from the current.\n@param newState The new desired \"paused\" state of the contract.\n@return Whether the action was successful.\nEmits LogPausedSet with:\n    The sender of the action.\n    The new state.",
            "id": 1651,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1646,
                  "name": "newState",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "815:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:15:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "845:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "844:14:12"
            },
            "scope": 1657,
            "src": "796:63:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@return Whether the contract is indeed paused.",
            "id": 1656,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:2:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "name": "isIndeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "975:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "974:15:12"
            },
            "scope": 1657,
            "src": "935:55:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1658,
        "src": "26:1465:12"
      }
    ],
    "src": "0:1491:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-06T12:29:53.350Z"
}