{
  "contractName": "RegulatedI",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousRegulator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newRegulator",
          "type": "address"
        }
      ],
      "name": "LogRegulatorSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newRegulator",
          "type": "address"
        }
      ],
      "name": "setRegulator",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRegulator",
      "outputs": [
        {
          "name": "regulator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\nimport { RegulatorI } from \"./RegulatorI.sol\";\n\ncontract RegulatedI {\n    /**\n     * Event emitted when a new regulator has been set.\n     * @param previousRegulator The previous regulator of the contract.\n     * @param newRegulator The new, and current, regulator of the contract.\n     */\n    event LogRegulatorSet(\n        address indexed previousRegulator,\n        address indexed newRegulator);\n\n    /**\n     * Sets the new regulator for this contract.\n     *     It should roll back if any address other than the current regulator of this contract\n     *       calls this function.\n     *     It should roll back if the new regulator address is 0.\n     *     It should roll back if the new regulator is the same as the current regulator.\n     * @param newRegulator The new desired regulator of the contract. It is assumed, that this is the\n     *     address of a `RegulatorI` contract. It is not necessary to prove it is a `RegulatorI`.\n     * @return Whether the action was successful.\n     * Emits LogRegulatorSet with:\n     *     The sender of the action.\n     *     The new regulator.\n     */\n    function setRegulator(address newRegulator)\n        public\n        returns(bool success);\n\n    /**\n     * @return The current regulator.\n     */\n    function getRegulator()\n        view\n        public\n        returns(RegulatorI regulator);\n\n    /*\n     * You need to create:\n     *\n     * - a contract named `Regulated` that:\n     *     - is a `RegulatedI`.\n     *     - has a constructor that takes one `address` parameter, the initial regulator, which cannot be 0\n     *       and which is assumed to be a `RegulatorI`. It is not necessary to prove it is a `RegulatorI`.\n     */\n}",
  "sourcePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/RegulatedI.sol",
  "ast": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/RegulatedI.sol",
    "exportedSymbols": {
      "RegulatedI": [
        1680
      ]
    },
    "id": 1681,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1659,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/RegulatorI.sol",
        "file": "./RegulatorI.sol",
        "id": 1661,
        "nodeType": "ImportDirective",
        "scope": 1681,
        "sourceUnit": 1749,
        "src": "26:46:13",
        "symbolAliases": [
          {
            "foreign": 1660,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1680,
        "linearizedBaseContracts": [
          1680
        ],
        "name": "RegulatedI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new regulator has been set.\n@param previousRegulator The previous regulator of the contract.\n@param newRegulator The new, and current, regulator of the contract.",
            "id": 1667,
            "name": "LogRegulatorSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "indexed": true,
                  "name": "previousRegulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "351:33:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "indexed": true,
                  "name": "newRegulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "394:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "341:82:13"
            },
            "src": "320:104:13"
          },
          {
            "body": null,
            "documentation": "Sets the new regulator for this contract.\n    It should roll back if any address other than the current regulator of this contract\n      calls this function.\n    It should roll back if the new regulator address is 0.\n    It should roll back if the new regulator is the same as the current regulator.\n@param newRegulator The new desired regulator of the contract. It is assumed, that this is the\n    address of a `RegulatorI` contract. It is not necessary to prove it is a `RegulatorI`.\n@return Whether the action was successful.\nEmits LogRegulatorSet with:\n    The sender of the action.\n    The new regulator.",
            "id": 1674,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "name": "newRegulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "1155:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "1208:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1207:14:13"
            },
            "scope": 1680,
            "src": "1133:89:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@return The current regulator.",
            "id": 1679,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1677,
                  "name": "regulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "1350:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RegulatorI_$1748",
                    "typeString": "contract RegulatorI"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1676,
                    "name": "RegulatorI",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1748,
                    "src": "1350:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegulatorI_$1748",
                      "typeString": "contract RegulatorI"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1349:22:13"
            },
            "scope": 1680,
            "src": "1282:90:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1681,
        "src": "74:1641:13"
      }
    ],
    "src": "0:1715:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/RegulatedI.sol",
    "exportedSymbols": {
      "RegulatedI": [
        1680
      ]
    },
    "id": 1681,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1659,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/exam-step-2/contracts/interfaces/RegulatorI.sol",
        "file": "./RegulatorI.sol",
        "id": 1661,
        "nodeType": "ImportDirective",
        "scope": 1681,
        "sourceUnit": 1749,
        "src": "26:46:13",
        "symbolAliases": [
          {
            "foreign": 1660,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1680,
        "linearizedBaseContracts": [
          1680
        ],
        "name": "RegulatedI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new regulator has been set.\n@param previousRegulator The previous regulator of the contract.\n@param newRegulator The new, and current, regulator of the contract.",
            "id": 1667,
            "name": "LogRegulatorSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "indexed": true,
                  "name": "previousRegulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "351:33:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "indexed": true,
                  "name": "newRegulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "394:28:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "341:82:13"
            },
            "src": "320:104:13"
          },
          {
            "body": null,
            "documentation": "Sets the new regulator for this contract.\n    It should roll back if any address other than the current regulator of this contract\n      calls this function.\n    It should roll back if the new regulator address is 0.\n    It should roll back if the new regulator is the same as the current regulator.\n@param newRegulator The new desired regulator of the contract. It is assumed, that this is the\n    address of a `RegulatorI` contract. It is not necessary to prove it is a `RegulatorI`.\n@return Whether the action was successful.\nEmits LogRegulatorSet with:\n    The sender of the action.\n    The new regulator.",
            "id": 1674,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "name": "newRegulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "1155:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "1208:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1207:14:13"
            },
            "scope": 1680,
            "src": "1133:89:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@return The current regulator.",
            "id": 1679,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1677,
                  "name": "regulator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "1350:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RegulatorI_$1748",
                    "typeString": "contract RegulatorI"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1676,
                    "name": "RegulatorI",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1748,
                    "src": "1350:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegulatorI_$1748",
                      "typeString": "contract RegulatorI"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1349:22:13"
            },
            "scope": 1680,
            "src": "1282:90:13",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1681,
        "src": "74:1641:13"
      }
    ],
    "src": "0:1715:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-06T12:29:53.351Z"
}